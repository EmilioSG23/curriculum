---
import { SKILLS } from "@/consts/skills";
import { useT } from "@/i18n/utils";

const t = useT();
const { index, id, nombre, download, link, github, descripcion, lenguajes, usos } = Astro.props;

const SKILLS_FLAT = SKILLS.flatMap((category) =>
	category.values.map((skill) => ({
		...skill,
		img: `habilidades/${category.id}/${skill.id}.png`,
	}))
);

function findSkill(id: string) {
	return SKILLS_FLAT.find((skill) => skill.id === id);
}
---

<article
	class=`project-item flex flex-col border-2 border-neon transition w-[90%] sm:w-[70%] md:w-[45%] lg:w-[31%] mx-2 xl:mx-0`
	data-aos="fade-up"
>
	<div class="relative w-full h-full overflow-hidden group">
		<img
			id={`project-${index}-image`}
			loading="lazy"
			class="w-[600px] h-[250px] object-cover group-hover:scale-110 transition"
			src={`projects/${id}.webp`}
			alt={nombre}
		/>
		<div
			id={`project-${index}-description`}
			class="absolute inset-0 flex items-center justify-center p-2 pointer-events-none
			transition-opacity duration-300 opacity-0 bg-primary/75
			group-hover:opacity-100 group-hover:pointer-events-auto"
		>
			<span
				set:html={t(descripcion as keyof typeof t)}
				class="text-xs font-semibold text-white sm:text-sm"
				data-translate={descripcion}
			/>
		</div>
	</div>
	<div class="flex flex-col py-2 border-t-2 border-neon bg-black/25">
		<div class="text-center flex items-center justify-center gap-x-2">
			<span class="text-[24px] font-medium text-center text-neon" data-translate={nombre}
				>{t(nombre as keyof typeof t)}
			</span>
			<button
				id=`project-${index}-info-button`
				class="hidden translate-y-[2px] cursor-pointer size-5 text-[8px] rounded-full border border-neon text-neon"
				><i class="fas fa-info"></i>
			</button>
		</div>
		<div class="flex items-center justify-center my-1 gap-x-1">
			{
				lenguajes.map((language: string) => {
					const skill = findSkill(language);
					if (!skill) return null;
					return (
						<div class="relative group">
							<img
								id="language-project"
								loading="lazy"
								src={skill.img}
								class="w-8 h-8 hover:scale-110 transition"
							/>
							<span
								id="language-span-content"
								class={`z-[1] absolute text-center left-1/2 -translate-x-1/2 translate-y-2
													text-[10px] py-1 px-3 rounded-[20px] opacity-0 whitespace-nowrap
													group-hover:opacity-100 transition pointer-events-none`}
								style={`background-color: ${skill.color || "white"}; color: ${skill.text || "black"};`}
							>
								{skill.name}
							</span>
							<span
								id="language-span-arrow"
								class={`z-[1] absolute left-1/2 -translate-x-1/2 -top-2 w-0 h-0 translate-y-10
														border-l-[8px] border-l-transparent 
														border-r-[8px] border-r-transparent 
														border-b-[10px] opacity-0
														pointer-events-none group-hover:opacity-100 transition`}
								style={`border-bottom-color: ${skill.color || "white"};`}
							/>
						</div>
					);
				})
			}
		</div>
		<div class="flex flex-row items-center justify-center m-1">
			{
				link && (
					<a
						href={link}
						class="cursor-pointer bg-neon text-background rounded-[15px] p-2 m-2 text-center sm:w-1/3 md:w-1/2 flex items-center justify-center
										gap-x-2 text-[10px] sm:text-[12px]
										hover:brightness-125 hover:text-background transition normal-case"
						target="_blank"
					>
						<i class="scale-125 fa-solid fa-circle-up" />
						<span data-translate="projects.visit-page">{t("projects.visit-page")}</span>
					</a>
				)
			}
			{
				download && (
					<a
						href={download}
						class="cursor-pointer bg-neon text-background rounded-[15px] p-2 m-2 text-center sm:w-1/3 md:w-1/2 flex items-center justify-center
										gap-x-2 text-[10px] sm:text-[12px]
										hover:brightness-125 hover:text-background transition normal-case"
						target="_blank"
					>
						<i class="scale-125 fa-solid fa-circle-down" />
						<span data-translate="projects.download">{t("projects.download")}</span>
					</a>
				)
			}
			<a
				href={github}
				class="cursor-pointer bg-gray-300 text-black rounded-[15px] p-2 m-2 text-center sm:w-1/3 md:w-1/2 flex items-center justify-center
										gap-x-2 text-[10px] sm:text-[12px]
										hover:brightness-125 transition normal-case"
				target="_blank"
			>
				<i class="scale-125 fab fa-github"></i>
				<span data-translate="projects.see-repo">{t("projects.see-repo")}</span>
			</a>
		</div>
	</div>
</article>

<script>
	const isMobile = !window.matchMedia("(pointer: fine)").matches;

	let actualLanguagesDisplayed = -1;

	function showProjectsDescriptions() {
		if (!isMobile) return;

		const $descriptionButtons = document.querySelectorAll("button[id$='-info-button']");
		const $descriptionProjects = document.querySelectorAll("div[id$='-description']");
		const $descriptionImages = document.querySelectorAll("img[id$='-image']");

		$descriptionButtons.forEach((button, index) => {
			button.classList.remove("hidden");
			button.addEventListener("click", () => {
				$descriptionProjects[index]?.classList.toggle("opacity-100");
				$descriptionProjects[index]?.classList.toggle("pointer-events-auto");
				$descriptionImages[index]?.classList.toggle("scale-110");
			});
		});
	}

	function showProjectsLanguages() {
		if (!isMobile) return;

		const $languagesProjects = document.querySelectorAll("img#language-project");
		const $languagesSpanName = document.querySelectorAll("span#language-span-content");
		const $languagesSpanArrow = document.querySelectorAll("span#language-span-arrow");

		$languagesProjects.forEach((img, index) => {
			img.addEventListener("click", () => {
				$languagesSpanArrow.forEach((arrow) => arrow.classList.remove("opacity-100"));
				$languagesSpanName.forEach((name) => name.classList.remove("opacity-100"));

				if (actualLanguagesDisplayed !== index) {
					actualLanguagesDisplayed = index;
					$languagesSpanArrow[index]?.classList.add("opacity-100");
					$languagesSpanName[index]?.classList.add("opacity-100");
				} else {
					actualLanguagesDisplayed = -1;
				}
			});
		});
	}

	document.addEventListener("DOMContentLoaded", showProjectsDescriptions);
	document.addEventListener("DOMContentLoaded", showProjectsLanguages);
</script>
