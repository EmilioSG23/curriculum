---
import { useT } from "../i18n/utils";
import LanguageToogleButton from "./LanguageToggleButton.astro";
import Logo from "./Logo.astro";
import ThemeToggleButton from "./ThemeToggleButton.astro";

const t = useT()

---
<header class= `fixed top-0 left-0 right-0 z-10 backdrop-blur-[3px] border-b-[4px]`>
    <nav class= "text-white font-main bg-black/50">
        <div id="mobileContainer" class = "md:hidden flex flex-wrap p-2 sm:p-4 justify-between items-center">
            <button id="menuButton" class="text-white p-2 border border-gold rounded-md scale hover:text-gold transition">
                <i class="fa fa-bars"></i>
            </button>
            <Logo />
            
        </div>
        <div id = "menu" class="p-5 gap-4 mx-auto lg:max-w-4xl uppercase
        [&>a]:w-[96px] [&>div#logo]:w-[96px] lg:[&>a]:w-[128px] lg:[&>div#logo]:w-[128px] md:[&>a]:text-[14px] lg:[&>a]:text-[16px]
        justify-between items-center text-center">
            <div id ="mobileDesktop" class = "hidden md:inline"><ThemeToggleButton/></div>
				<a href="#about-me" data-translate="about-me.title" class = "hover:md:scale-110 hover:text-gold transition">{t("about-me.title")}</a>
				<a href="#experience" data-translate="experience.title" class = "hover:md:scale-110 hover:text-gold transition">{t("experience.title")}</a>
				<div id ="logo" class = "hidden md:flex justify-center"><Logo /></div>
				<a href="#skills" data-translate="skills.title" class = "hover:md:scale-110 hover:text-gold transition">{t("skills.title")}</a>
				<a href="#projects" data-translate="projects.title" class = "hover:md:scale-110 hover:text-gold transition ">{t("projects.title")}</a>
            <div class = "self-center"><LanguageToogleButton/></div>
        </div>
    </nav>
</header>

<script>
    /* Mover themeToogle */
    const $mobileContainer = document.getElementById("mobileContainer") as HTMLElement
    const $mobileDesktop = document.getElementById("mobileDesktop") as HTMLElement

    const $toogleButton = document.getElementById("theme") as HTMLElement
    function moveToogleButton (){
        const parent = window.innerWidth < 768 ? $mobileContainer : $mobileDesktop;
        if (parent && $toogleButton && $toogleButton.parentElement !== parent)
            parent.appendChild($toogleButton);
    }
    window.addEventListener("resize", moveToogleButton)
    document.addEventListener("DOMContentLoaded", moveToogleButton)


    /* Botón del menú */
    document.querySelectorAll("#menu a").forEach((anchor) => {
        anchor.addEventListener("click", ()=> {document.getElementById("menu")?.classList.remove("open")})
    })

    document.getElementById("menuButton")?.addEventListener("click", ()=>{
        document.getElementById("menu")?.classList.toggle("open")
    })

    /* Scroll */
    let $sections = document.querySelectorAll('section')
    let $anchors = document.querySelectorAll('a[href^="#"]')

    window.onscroll = () => {
        $sections.forEach(section => {
            let top = window.scrollY + (window.screen.height*0.5)
            let offset = section.offsetTop
            let height = section.offsetHeight

            if (top >= offset && top < offset + height){
                $anchors.forEach(anchor => {
                    anchor.classList.remove ("active")
                    if (section.id != "info") document.querySelector(`a[href="#${section.id}"]`)?.classList.add("active")
                })
            }
        })
    }

    /* Redireccionamiento de Scroll */
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function (this: HTMLAnchorElement, e: Event) {
            e.preventDefault();

            const href = this.getAttribute('href');
            if (href === null) return;
            const targetId = href.substring(1);
            const targetElement = document.getElementById(targetId);
            
            if (targetElement === null) return;
            
            window.scrollTo({
                top: targetElement.offsetTop - 100,
                behavior: 'smooth'
            });
        });
    });
</script>


<style>
    #menu {
        position: absolute;
        border: solid 2pt var(--color-gold);
        background-color: rgba(0, 0, 0, 0.5);
        display: flex;
        flex-direction: column;
        overflow: hidden;
        max-height: 0;
        opacity: 0;
        visibility: hidden;
        transition: max-height 0.3s ease-out, opacity 0.3s ease-out, visibility 0.3s;
    }

    #menu.open {
        opacity: 1;
        visibility: visible;
        max-height: 250px;
    }

    @media (min-width: 768px) {
        #menu {
            position: initial;
            border: none;
            background-color: transparent;
            display: flex;
            overflow: visible;
            flex-direction: row;
            flex-wrap: wrap;
            max-height: none;
            visibility: visible;
            opacity: 1;
            transition: none;
        }
    }

    #menu.hidden {
        display: none;
    }
    
    a.active{
        color: var(--color-gold)
    }
    header{
        border-bottom: solid 8px;
        border-image: linear-gradient(90deg, rgba(255,200,0,1) 0%, rgb(255, 255, 255) 0%, rgba(255,200,0,1) 25%) 1;
        animation: 20s border-animation linear infinite;
    }
    @keyframes opening {
		from {
			max-width: 0;
			opacity: 0;
		}
		to {
			max-width: 1000px; /* o cualquier valor que sea adecuado para tu diseño */
			opacity: 1;
		}
    }

    @keyframes border-animation {
        0%{
            border-image: linear-gradient(90deg, rgba(255,200,0,1) 0%, rgb(255, 255, 255) 0%, rgba(255,200,0,1) 25%) 1;
        }
        12.5%{
            border-image: linear-gradient(90deg, rgba(255,200,0,1) 0%, rgb(255, 255, 255) 25%, rgba(255,200,0,1) 50%) 1;
        }
        25%{
            border-image: linear-gradient(90deg, rgba(255,200,0,1) 25%, rgb(255, 255, 255) 50%, rgba(255,200,0,1) 75%) 1;
        }
        37.5%{
            border-image: linear-gradient(90deg, rgba(255,200,0,1) 50%, rgb(255, 255, 255) 75%, rgba(255,200,0,1) 100%) 1;
        }
        50%{
            border-image: linear-gradient(90deg, rgba(255,200,0,1) 75%, rgb(255, 255, 255) 100%, rgba(255,200,0,1) 100%) 1;
        }
        62.5%{
            border-image: linear-gradient(90deg, rgba(255,200,0,1) 50%, rgb(255, 255, 255) 75%, rgba(255,200,0,1) 100%) 1;
        }
        75%{
            border-image: linear-gradient(90deg, rgba(255,200,0,1) 25%, rgb(255, 255, 255) 50%, rgba(255,200,0,1) 75%) 1;
        }
        87.5%{
            border-image: linear-gradient(90deg, rgba(255,200,0,1) 0%, rgb(255, 255, 255) 25%, rgba(255,200,0,1) 50%) 1;
        }
        100%{
            border-image: linear-gradient(90deg, rgba(255,200,0,1) 0%, rgb(255, 255, 255) 0%, rgba(255,200,0,1) 25%) 1;
        }
    }
</style>